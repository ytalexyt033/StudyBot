from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, CommandHandler
from models.enums import UserRole
from config import SELECTING_ACTION

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    db = context.bot_data['db']
    db.add_user(user.id, user.username, user.first_name, user.last_name)
    
    buttons = [
        [InlineKeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="create_order")],
        [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü—Ä–∞–≤–∏–ª–∞", callback_data="show_rules")],
        [InlineKeyboardButton("üí¨ –ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", url="https://t.me/StudyTipsSupport")]
    ]
    
    user_data = db.get_user(user.id)
    if user_data and user_data['role'] == UserRole.ADMIN.value:
        buttons.append([InlineKeyboardButton("üëë –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_menu")])
    
    if user_data and user_data['role'] == UserRole.EXECUTOR.value:
        buttons.append([InlineKeyboardButton("üë®‚Äçüíª –ú–µ–Ω—é –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data="executor_menu")])
    
    if update.message:
        await update.message.reply_text(
            "üîπ *STUDY TIPS*\n_–†–µ—à–∞–µ–º, –ø–∏—à–µ–º, —Å–ø–∞—Å–∞–µ–º ‚Äî –ø–æ–∫–∞ —Ç—ã –æ—Ç–¥—ã—Ö–∞–µ—à—å!_\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(buttons),
            parse_mode="Markdown"
        )
    elif update.callback_query:
        await update.callback_query.edit_message_text(
            "üîπ *STUDY TIPS*\n_–†–µ—à–∞–µ–º, –ø–∏—à–µ–º, —Å–ø–∞—Å–∞–µ–º ‚Äî –ø–æ–∫–∞ —Ç—ã –æ—Ç–¥—ã—Ö–∞–µ—à—å!_\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(buttons),
            parse_mode="Markdown"
        )
    
    return SELECTING_ACTION

def register_common_handlers(application):
    application.add_handler(CommandHandler("start", start))